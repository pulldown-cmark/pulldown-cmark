// This file is auto-generated by the build script
// Please, do not modify it manually

use super::test_markdown_html;

#[test]
fn container_extensions_test_1() {
    let original = r##"> Is this **bold**?
> Is this **bold**?
> ::: spoiler Is this expandable?
> Is this inside?
> :::
"##;
    let expected = r##"<blockquote><p>Is this <strong>bold</strong>?
Is this <strong>bold</strong>?</p>
<details>
<summary>Is this expandable?</summary>
<p>Is this inside?</p>
</details>
</blockquote>
"##;

    test_markdown_html(
        original, expected, false, false, false, false, false, false, true,
    );
}

#[test]
fn container_extensions_test_2() {
    let original = r##"::: spoiler Is this expandable?
Is this collapsable?
> Is this **bold**?
> Is this **bold**?
:::
**is this seperate and bold**
"##;
    let expected = r##"<details>
<summary>Is this expandable?</summary>
<p>Is this collapsable?</p>
<blockquote><p>Is this <strong>bold</strong>?
Is this <strong>bold</strong>?</p></blockquote>
</details>
<p><strong>is this seperate and bold</strong></p>
"##;

    test_markdown_html(
        original, expected, false, false, false, false, false, false, true,
    );
}

#[test]
fn container_extensions_test_3() {
    let original = r##"::: spoiler Is this expandable?
Is this collapsable?
> Is this **bold**?
> Is this **bold**?
> ::: spoiler Is this expandable?
> Is this inside?
> :::
:::
"##;
    let expected = r##"<details>
<summary>Is this expandable?</summary>
<p>Is this collapsable?</p>
<blockquote><p>Is this <strong>bold</strong>?
Is this <strong>bold</strong>?</p>
<details>
<summary>Is this expandable?</summary>
<p>Is this inside?</p>
</details>
</blockquote>
</details>
"##;

    test_markdown_html(
        original, expected, false, false, false, false, false, false, true,
    );
}

#[test]
fn container_extensions_test_4() {
    let original = r##"::: spoiler Is this expandable?
Is this collapsable?
> Is this **bold**?
> Is this **bold**?
> ::: spoiler Is this expandable?
> Is this collapsable?
> > Is this **bold**?
> > Is this **bold**?
> :::
:::
**is this seperate and bold**
"##;
    let expected = r##"<details>
<summary>Is this expandable?</summary>
<p>Is this collapsable?</p>
<blockquote><p>Is this <strong>bold</strong>?
Is this <strong>bold</strong>?</p>
<details>
<summary>Is this expandable?</summary>
<p>Is this collapsable?</p>
<blockquote><p>Is this <strong>bold</strong>?
Is this <strong>bold</strong>?</p></blockquote>
</details>
</blockquote>
</details>
<p><strong>is this seperate and bold</strong></p>
"##;

    test_markdown_html(
        original, expected, false, false, false, false, false, false, true,
    );
}

#[test]
fn container_extensions_test_5() {
    let original = r##"::: spoiler Is this expandable?
Is this collapsable?
:::
**is this seperate and bold**
"##;
    let expected = r##"<details>
<summary>Is this expandable?</summary>
<p>Is this collapsable?</p>
</details>
<p><strong>is this seperate and bold</strong></p>
"##;

    test_markdown_html(
        original, expected, false, false, false, false, false, false, true,
    );
}

#[test]
fn container_extensions_test_6() {
    let original = r##"::: spoiler Is this expandable?
Is this collapsable?

Is this **bold**?
:::
"##;
    let expected = r##"<details>
<summary>Is this expandable?</summary>
<p>Is this collapsable?</p>
<p>Is this <strong>bold</strong>?</p>
</details>
"##;

    test_markdown_html(
        original, expected, false, false, false, false, false, false, true,
    );
}

#[test]
fn container_extensions_test_7() {
    let original = r##":::spoiler Is this expandable?
Is this collapsable?

Is this **bold**?
:::
"##;
    let expected = r##"<details>
<summary>Is this expandable?</summary>
<p>Is this collapsable?</p>
<p>Is this <strong>bold</strong>?</p>
</details>
"##;

    test_markdown_html(
        original, expected, false, false, false, false, false, false, true,
    );
}

#[test]
fn container_extensions_test_8() {
    let original = r##"::: example
Is this collapsable?

Is this **bold**?
:::
"##;
    let expected = r##"<div class="example">
<p>Is this collapsable?</p>
<p>Is this <strong>bold</strong>?</p>
</div>
"##;

    test_markdown_html(
        original, expected, false, false, false, false, false, false, true,
    );
}

#[test]
fn container_extensions_test_9() {
    let original = r##":::: example
Is this collapsable?

Is this **bold**?
::::
"##;
    let expected = r##"<div class="example">
<p>Is this collapsable?</p>
<p>Is this <strong>bold</strong>?</p>
</div>
"##;

    test_markdown_html(
        original, expected, false, false, false, false, false, false, true,
    );
}

#[test]
fn container_extensions_test_10() {
    let original = r##":::::spoiler Is this expandable?
Is this collapsable?

Is this **bold**?
:::::
"##;
    let expected = r##"<details>
<summary>Is this expandable?</summary>
<p>Is this collapsable?</p>
<p>Is this <strong>bold</strong>?</p>
</details>
"##;

    test_markdown_html(
        original, expected, false, false, false, false, false, false, true,
    );
}

#[test]
fn container_extensions_test_11() {
    let original = r##":::

content

:::
"##;
    let expected = r##"<p>:::</p>
<p>content</p>
<p>:::</p>
"##;

    test_markdown_html(
        original, expected, false, false, false, false, false, false, true,
    );
}

#[test]
fn container_extensions_test_12() {
    let original = r##"::: block

content

::: end
"##;
    let expected = r##"<div class="block">
<p>content</p>
<div class="end">

</div>
</div>
"##;

    test_markdown_html(
        original, expected, false, false, false, false, false, false, true,
    );
}

#[test]
fn container_extensions_test_13() {
    let original = r##" ::: block
:::

::: block
 :::
"##;
    let expected = r##"<div class="block">

</div>
<div class="block">

</div>
"##;

    test_markdown_html(
        original, expected, false, false, false, false, false, false, true,
    );
}
